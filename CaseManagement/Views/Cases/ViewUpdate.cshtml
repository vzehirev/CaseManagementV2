@model CaseManagement.ViewModels.Cases.ViewUpdate.CaseViewUpdateViewModel

<div class="row mt-5">
    <div class="col-12 mx-auto text-center">
        <section>
            <div class="col-4 mx-auto text-center">
                <h4>Case: @Model.Number</h4>
                <hr />
                @*Set in Cases controller's Update action with post method in case of successfull case update*@
                @if (this.TempData["CaseUpdatedSuccessfully"] as bool? == true)
                {
                    <div class="alert alert-dismissible alert-success">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                        <strong>Case updated successfully.</strong>
                    </div>
                }
            </div>
            <div class="row">
                <div class="form-group col-3">
                    <label>Case number</label>
                    <input asp-for="@Model.Number" class="form-control" disabled />
                </div>
                <div class="form-group col-3">
                    <label>Priority</label>
                    <input asp-for="@Model.Priority" class="form-control" disabled />
                </div>
                <div class="form-group col-3">
                    <label>Subject</label>
                    <input asp-for="@Model.Subject" class="form-control" disabled />
                </div>
                <div class="form-group col-3">
                    <label>Status</label>
                    <input asp-for="@Model.Status" class="form-control" disabled />
                </div>
                <div class="form-group col-3">
                    <label>Waiting reason</label>
                    <input asp-for="@Model.WaitingReason" class="form-control" disabled />
                </div>
                <div class="form-group col-3">
                    <label>Type</label>
                    <input asp-for="@Model.Type" class="form-control" disabled />
                </div>
                <div class="form-group col-3">
                    <label>Queue</label>
                    <input asp-for="@Model.Queue" class="form-control" disabled />
                </div>
                <div class="form-group col-3">
                    <label>Queue status</label>
                    <input asp-for="@Model.QueueStatus" class="form-control" disabled />
                </div>
                <div class="form-group col-3">
                    <label>Reported at (UTC)</label>
                    <input asp-for="@Model.ReportedAtUtc" class="form-control" disabled />
                </div>
                <div class="form-group col-3">
                    <label>Updated at (UTC)</label>
                    <input asp-for="@Model.UpdatedAtUtc" class="form-control" disabled />
                </div>
                <div class="form-group col-3">
                    <label>Updated at (IST)</label>
                    <input asp-for="@Model.UpdatedAtIst" class="form-control" disabled />
                </div>
                <div class="form-group col-3">
                    <label>Resume at</label>
                    <input asp-for="@Model.ResumeAt" class="form-control" disabled />
                </div>
                <div class="form-group col-3">
                    <label>Assigned</label>
                    <input asp-for="@Model.AssignedProcessor" class="form-control" disabled />
                </div>
                <div class="form-group col-3">
                    <label>Changed by</label>
                    <input asp-for="@Model.ChangedByUser" class="form-control" disabled />
                </div>
                <div class="form-group col-6">
                    <label>Notes</label>
                    <textarea asp-for="@Model.Notes" class="form-control" rows="9" disabled></textarea>
                </div>
            </div>
        </section>
    </div>
</div>

<div class="col-md-4 mx-auto text-center mt-5">
    <section>
        <h4>Tasks</h4>
        <hr />
        @*Set in Tasks controller's Create action with post method in case of successfull task creation*@
        @if (this.TempData["TaskCreatedSuccessfully"] as bool? == true)
        {
            <div class="alert alert-dismissible alert-success">
                <button type="button" class="close" data-dismiss="alert">&times;</button>
                <strong>Task created successfully.</strong>
            </div>
        }
        <a class="btn btn-info" asp-controller="Tasks" asp-action="Create" asp-route-caseId="@Model.Id">ADD TASK</a>
    </section>
</div>

<div id="tasks-table" class="text-center">
    <table class="table table-hover border">
        <thead>
            <tr class="table-active">
                <th scope="col">Last updated (UTC)<img class="order-by-icon pl-1" src="/img/arrow-down.png"></th>
                <th scope="col">Last updated (IST)</th>
                <th scope="col">Case number</th>
                <th scope="col">Subject</th>
                <th scope="col">Case status</th>
                <th scope="col">Case priority</th>
                <th scope="col">Waiting reason</th>
                <th scope="col">Processor</th>
                <th scope="col">Changed by</th>
                <th scope="col">Resume at (UTC)</th>
                <th scope="col">Notes</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var taskModel in Model.Tasks)
            {
                <tr>
                    <td>@taskModel.LastUpdatedUtc</td>
                    <td>@taskModel.LastUpdatedIst</td>
                    <td>@taskModel.CaseNumber</td>
                    <td>@taskModel.Subject</td>
                    <td>@taskModel.CaseStatus</td>
                    <td>@taskModel.CasePriority</td>
                    <td>@taskModel.WaitingReason</td>
                    <td>@taskModel.AssignedProcessor</td>
                    <td>@taskModel.ChangedByUser</td>
                    <td>@taskModel.ResumeAtUtc</td>
                    <td>
                        @if (!string.IsNullOrWhiteSpace(taskModel.Notes))
                        {
                            <button type="button" class="btn btn-link btn-sm" data-container="body" data-toggle="popover" data-placement="left" data-content="@taskModel.Notes">See notes</button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @if (Model.Tasks.Count() == 0)
    {
        <h6>No tasks available.</h6>
    }
</div>

@section Scripts {
    <partial name="PopoverHandlerJsPartial" />
    <partial name="_ValidationScriptsPartial" />
    <script>
        handlePopover();
    </script>
}

